<MessageCollection>

<!-- Plugin information -->
    <Plugin>
        <ShortDescription>Findbugs4JUnit plugin</ShortDescription>
        <Details>
            <![CDATA[
            <p>This plugin detects incorrect usage of the JUnit library.</p>
            ]]>
        </Details>
    </Plugin>

  <Detector class="com.youdevise.fbplugins.findbugs.junit.JUnitTestIgnoredForTooLong" >
    <Details>
      <![CDATA[<p> This detector looks for JUnit test cases which have been @Ignored for too long.
        </p>]]>
    </Details>
  </Detector>


  <BugPattern type="JUNIT_IGNORED_TOO_LONG">
    <ShortDescription>@Ignore'd a JUnit test for too long</ShortDescription>

<LongDescription>{1} contains a test case which has been ignored for too long.</LongDescription>

<Details>
  <![CDATA[<p>
    The @Ignore annotation in JUnit allows you to exclude test cases from being executed. This is convenient when developing new functionality, but if the @Ignore are left in the source code for too long, this may indicate that a developer has forgotten to remove the annotation. 
    <p>
    If the annotation has been left by mistake, developers may have a false sense of security with regard to the coverage of their tests, as they won't break when the actual functionality breaks.
    However, @Ignores left deliberately can be a problem in much the same way that comments in source code can become a problem - they can easily get out of date, and reflect functionality that is not implemented.
    
    When an @Ignore has been left in the source code for too long, the recommended action is to:
    <pre>
remove the annotation
if ( the test passes ) {
	leave the annotation off
} else if ( the test fails but can't do anything about it and you just want FindBugs to stop annoying you ) {
	update the comment inside the @Ignore, and re-commit to version control
} else {
	find out if the functionality is being used, or is expected to exist
	if ( it is used ) {
		fix the test, and/or the code
	} else {
		remove the entire test case
	}
}
    </pre>
  ]]>
</Details>
  </BugPattern>

  <BugCode abbrev="JUnit">Ignored A JUnit Test For Too Long</BugCode>
  
</MessageCollection>

